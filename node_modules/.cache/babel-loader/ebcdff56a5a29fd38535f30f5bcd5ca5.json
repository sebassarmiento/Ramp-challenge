{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/ramp-fe-challenge/src/components/InputCheckbox/index.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputCheckbox = _ref => {\n  _s();\n\n  let {\n    id,\n    checked = false,\n    disabled,\n    onChange\n  } = _ref;\n  const {\n    current: inputId\n  } = useRef(`RampInputCheckbox-${id}`);\n  const [isChecked, setIsChecked] = useState(checked);\n  useEffect(() => {\n    // Try to read the approval status from Local Storage when the component mounts\n    const approved = localStorage.getItem(id.toString());\n\n    if (approved !== null) {\n      setIsChecked(approved === \"true\");\n    }\n  }, []);\n\n  const handleApproval = () => {\n    console.log(\"hadnling approval\");\n    const newApprovalStatus = !isChecked;\n    localStorage.setItem(id.toString(), newApprovalStatus.toString()); // Update Local Storage\n\n    setIsChecked(newApprovalStatus);\n    onChange(newApprovalStatus);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampInputCheckbox--container\",\n    \"data-testid\": inputId,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      onClick: () => onChange(!checked),\n      className: classNames(\"RampInputCheckbox--label\", {\n        \"RampInputCheckbox--label-checked\": checked,\n        \"RampInputCheckbox--label-disabled\": disabled\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: inputId,\n      type: \"checkbox\",\n      className: \"RampInputCheckbox--input\",\n      checked: checked,\n      disabled: disabled,\n      onChange: () => handleApproval()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputCheckbox, \"3WCcl45H08KrBWt4oSYOGXF6YCk=\");\n\n_c = InputCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputCheckbox\");","map":{"version":3,"names":["classNames","useEffect","useRef","useState","InputCheckbox","id","checked","disabled","onChange","current","inputId","isChecked","setIsChecked","approved","localStorage","getItem","toString","handleApproval","console","log","newApprovalStatus","setItem"],"sources":["/Users/admin/Downloads/ramp-fe-challenge/src/components/InputCheckbox/index.tsx"],"sourcesContent":["import classNames from \"classnames\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { InputCheckboxComponent } from \"./types\"\n\nexport const InputCheckbox: InputCheckboxComponent = ({ id, checked = false, disabled, onChange }) => {\n  const { current: inputId } = useRef(`RampInputCheckbox-${id}`)\n  const [isChecked, setIsChecked] = useState(checked)\n\n  useEffect(() => {\n    // Try to read the approval status from Local Storage when the component mounts\n    const approved = localStorage.getItem(id.toString());\n    if (approved !== null) {\n      setIsChecked(approved === \"true\");\n    }\n  }, []);\n\n  const handleApproval = () => {\n    console.log(\"hadnling approval\")\n    const newApprovalStatus = !isChecked;\n    localStorage.setItem(id.toString(), newApprovalStatus.toString()); // Update Local Storage\n    setIsChecked(newApprovalStatus)\n    onChange(newApprovalStatus)\n  }\n\n  return (\n    <div className=\"RampInputCheckbox--container\" data-testid={inputId}>\n      <label\n        onClick={() => onChange(!checked)}\n        className={classNames(\"RampInputCheckbox--label\", {\n          \"RampInputCheckbox--label-checked\": checked,\n          \"RampInputCheckbox--label-disabled\": disabled,\n        })}\n      />\n      <input\n        id={inputId}\n        type=\"checkbox\"\n        className=\"RampInputCheckbox--input\"\n        checked={checked}\n        disabled={disabled}\n        onChange={() => handleApproval()}\n      />\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;;AAGA,OAAO,MAAMC,aAAqC,GAAG,QAAiD;EAAA;;EAAA,IAAhD;IAAEC,EAAF;IAAMC,OAAO,GAAG,KAAhB;IAAuBC,QAAvB;IAAiCC;EAAjC,CAAgD;EACpG,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAAuBR,MAAM,CAAE,qBAAoBG,EAAG,EAAzB,CAAnC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACG,OAAD,CAA1C;EAEAL,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqBV,EAAE,CAACW,QAAH,EAArB,CAAjB;;IACA,IAAIH,QAAQ,KAAK,IAAjB,EAAuB;MACrBD,YAAY,CAACC,QAAQ,KAAK,MAAd,CAAZ;IACD;EACF,CANQ,EAMN,EANM,CAAT;;EAQA,MAAMI,cAAc,GAAG,MAAM;IAC3BC,OAAO,CAACC,GAAR,CAAY,mBAAZ;IACA,MAAMC,iBAAiB,GAAG,CAACT,SAA3B;IACAG,YAAY,CAACO,OAAb,CAAqBhB,EAAE,CAACW,QAAH,EAArB,EAAoCI,iBAAiB,CAACJ,QAAlB,EAApC,EAH2B,CAGwC;;IACnEJ,YAAY,CAACQ,iBAAD,CAAZ;IACAZ,QAAQ,CAACY,iBAAD,CAAR;EACD,CAND;;EAQA,oBACE;IAAK,SAAS,EAAC,8BAAf;IAA8C,eAAaV,OAA3D;IAAA,wBACE;MACE,OAAO,EAAE,MAAMF,QAAQ,CAAC,CAACF,OAAF,CADzB;MAEE,SAAS,EAAEN,UAAU,CAAC,0BAAD,EAA6B;QAChD,oCAAoCM,OADY;QAEhD,qCAAqCC;MAFW,CAA7B;IAFvB;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MACE,EAAE,EAAEG,OADN;MAEE,IAAI,EAAC,UAFP;MAGE,SAAS,EAAC,0BAHZ;MAIE,OAAO,EAAEJ,OAJX;MAKE,QAAQ,EAAEC,QALZ;MAME,QAAQ,EAAE,MAAMU,cAAc;IANhC;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAvCM;;GAAMb,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}